// Given two **0-indexed** integer arrays nums1 and nums2, return *a list* answer *of size* 2 *where:*

// - answer[0] *is a list of all **distinct** integers in* nums1 *which are **not** present in* nums2*.*
// - answer[1] *is a list of all **distinct** integers in* nums2 *which are **not** present in* nums1.

import java.util.*;
public class Main
{
	public static void main(String[] args) {
		int[] nums1 = {1,2,3}, nums2 = {2,4,6};
	
		List<List<Integer>> ans= new ArrayList<>();
		
		List<Integer> l1 =findDistinct(nums1,nums2);
		List<Integer> l2 =findDistinct(nums2,nums1);
		
		ans.add(l1);
		ans.add(l2);
		System.out.println(ans);
	}
	
	public static List<Integer> findDistinct(int[] arr1 , int[] arr2)
	{
	    HashSet<Integer> set=new HashSet<>();
	    List<Integer> list= new ArrayList<>();
	    for(int i=0;i<arr2.length;i++)
	    {
	        set.add(arr2[i]);
	    }
	    for(int i=0;i<arr1.length;i++)
	    {
	        if(!set.contains(arr1[i]))
	        list.add(arr1[i]);
	    }
	    
	    return list;
	}
}
